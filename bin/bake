#! /bin/bash
#
# This script launches the packer builder to create
# a 'ubuntu-dev' development virtual machine image.
#

IMAGE_STREAM=''
TODAY=`date +%Y%m%d%H%M`
PARENT_AMI=''
AMI_DESCRIPTION=""
IAM_INSTANCE_PROFILE="ec2PackerInstanceRole"
INSTANCE_TYPE="t2.medium"
REGION="us-east-1"
VPC_ID=""
SUBNET_ID=""
SECURITY_GROUP_ID="sg-5ef8153a"
INIT_SCRIPT=""

while test $# -gt 0; do
    case "$1" in
        --parent)
            shift
            PARENT_AMI=$1
            ;;

        --image-stream)
            shift
            IMAGE_STREAM=$1
            ;;

        --artifact-version)
            shift
            ARTIFACT_VERSION=$1
            ;;

        --instance-type)
            shift
            INSTANCE_TYPE=$1
            ;;

        --description)
            shift
            AMI_DESCRIPTION=$1
            ;;

        --key-name)
            shift
            KEY_NAME=$1
            ;;

        --region)
            shift
            REGION=$1
            ;;

        --spot-price)
            shift
            SPOT_PRICE=$1
            ;;

        --subnet)
            shift
            SUBNET=$1
            ;;

        --vpc)
            shift
            VPC_ID=$1
            ;;

        -h|--help)
            echo `basename $0` '--region (us-east-1|us-west-2)' '--parent <ami-id>' '--image-stream name' '--description <ami desc>' '<ami creation script>'
            ;;

         *)
            break
            ;;
    esac

    shift
done

source helpers/bash_functions

target=$1
if [[ -z "${target}" ]]; then
    echo "missing an AMI baking script"
    echo -e "\t usage:  `basename $0` <script>"
    exit -1
fi
INIT_SCRIPT=$target

#
# arg's gathered, start digesting 'em
#

if [[ -z "${VPC_ID}" ]]; then
    vpc=`findVPCWithTag ${REGION} Bakery`
    echo VPC ${vpc}
    if [[ -z "${vpc}" || "${vpc}" == "null" ]]; then
        echo "Unable to find a Bakery VPC"
        exit 1
    fi

    VPC_ID=${vpc}
fi

if [[ -z "${SUBNET_ID}" ]]; then

    subnet=`findSubnetWithTag ${REGION} ${VPC_ID} Bakery`
    echo Subnet ${subnet}
    if [[ -z "${subnet}" || "${subnet}" == "null" ]]; then
        echo "Unable to find a Bakery subnet"
        exit 2
    fi

    SUBNET_ID=${subnet}
fi

if [[ -z "${IMAGE_STREAM}" ]]; then
    echo "missing --image-stream <stream name>"
    exit 3
fi

if [[ -z "${AMI_DESCRIPTION}" ]]; then
    echo 'missing --description <desc>'
    exit 4
fi

echo parent ${PARENT_AMI}
if [[ -z "${PARENT_AMI}" ]]; then
    echo 'missing --parent <ami-id>'
    exit 4
fi

#
# args processed, let's bake an AMI
#

AMI_NAME="${IMAGE_STREAM}-${TODAY}"
#VM_NAME="${IMAGE_STREAM}-${TODAY}"

echo "AMI_NAME               = ${AMI_NAME}"
echo "AMI_DESCRIPTION        = ${AMI_DESCRIPTION}"
echo "IAM_INSTANCE_PROFILE   = ${IAM_INSTANCE_PROFILE}"
echo "PARENT_AMI             = ${PARENT_AMI}"
echo "REGION                 = ${REGION}"
echo "SUBNET_ID              = ${SUBNET_ID}"
echo "VPC_ID                 = ${vpc}"
echo "SECURITY_GROUP_ID      = ${SECURITY_GROUP_ID}"
echo "INIT_SCRIPT            = ${INIT_SCRIPT}"

packer build \
    -var "spot_price=auto" \
    -var "spot_price_auto_product=Linux/UNIX" \
	-var "ami_name=${AMI_NAME}" \
	-var "ami_description=${AMI_DESCRIPTION}" \
	-var "artifact_version=${ARTIFACT_VERSION}" \
	-var "iam_instance_profile=${IAM_INSTANCE_PROFILE}" \
	-var "instance_type=${INSTANCE_TYPE}" \
	-var "source_ami=${PARENT_AMI}" \
	-var "region=${REGION}" \
	-var "subnet_id=${SUBNET_ID}" \
	-var "vpc_id=${VPC_ID}" \
	-var "security_group_id=${SECURITY_GROUP_ID}" \
	-var "cloud-init-script=${INIT_SCRIPT}" \
	-var "image_stream=${IMAGE_STREAM}" \
	-var "git_commit=$(gitCommitHash)" \
	-var "git_origin=$(gitOriginURL)" \
	aws-bake.json | tee ${IMAGE_STREAM}/${AMI_NAME}.log

#
# tag the newly created AMI with the parent's AMI ID
# (we can use this later for inventory management)
#

#echo tagAMI ${AMI_NAME} ${IMAGE_STREAM} ${PARENT_AMI}
